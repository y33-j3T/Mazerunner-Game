/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gamepack;

import static gamepack.Game.JOHNNY;
import static gamepack.gameFrame.armorProgressBar;
import static gamepack.gameFrame.attackDamageProgressBar;
import static gamepack.gameFrame.goldProgressBar;
import static gamepack.gameFrame.visionProgressBar;

/**
 *
 * @author Yee Jet Tan
 */
public class upgradeDialog extends javax.swing.JDialog {

    /**
     * Creates new form upgradeDialog
     */
    public upgradeDialog() {
        super();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        armorUpgrade = new javax.swing.JButton();
        totalHPUpgrade = new javax.swing.JButton();
        visionUpgrade = new javax.swing.JButton();
        attackDamageUpgrade = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("UPGRADES");

        armorUpgrade.setText("Armor + 1");
        armorUpgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                armorUpgradeActionPerformed(evt);
            }
        });

        totalHPUpgrade.setText("Total HP + 20");
        totalHPUpgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalHPUpgradeActionPerformed(evt);
            }
        });

        visionUpgrade.setText("Vision + 1");
        visionUpgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visionUpgradeActionPerformed(evt);
            }
        });

        attackDamageUpgrade.setText("Attack Damage + 1");
        attackDamageUpgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackDamageUpgradeActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("You've reached 40 Gold!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalHPUpgrade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(armorUpgrade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(visionUpgrade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attackDamageUpgrade, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(totalHPUpgrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(armorUpgrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visionUpgrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attackDamageUpgrade)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void armorUpgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armorUpgradeActionPerformed
        if(JOHNNY.getARMOR()<5){
            JOHNNY.setARMOR(JOHNNY.getARMOR()+1);
            armorProgressBar.setValue(JOHNNY.getARMOR());
        }
        JOHNNY.setGOLD_amount(0);
        goldProgressBar.setValue(JOHNNY.getGoldAmount());
        dispose();
    }//GEN-LAST:event_armorUpgradeActionPerformed

    private void visionUpgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visionUpgradeActionPerformed
        if(JOHNNY.getVISION()<5){
            JOHNNY.setVISION(JOHNNY.getVISION()+1);
            visionProgressBar.setValue(JOHNNY.getVISION());
        }
        JOHNNY.setGOLD_amount(0);
        goldProgressBar.setValue(JOHNNY.getGoldAmount());
        dispose();
    }//GEN-LAST:event_visionUpgradeActionPerformed

    private void attackDamageUpgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackDamageUpgradeActionPerformed
        if(JOHNNY.getATTACKDAMAGE()<10){
            JOHNNY.setATTACKDAMAGE(JOHNNY.getATTACKDAMAGE()+1);
            attackDamageProgressBar.setValue(JOHNNY.getATTACKDAMAGE());
        }
        JOHNNY.setGOLD_amount(0);
        goldProgressBar.setValue(JOHNNY.getGoldAmount());
        dispose();
    }//GEN-LAST:event_attackDamageUpgradeActionPerformed

    private void totalHPUpgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalHPUpgradeActionPerformed
        if(JOHNNY.getTOTALHP()<200){
            JOHNNY.setTOTALHP(JOHNNY.getTOTALHP()+20);
            JOHNNY.setHP(JOHNNY.getHP()+20);
        }
        JOHNNY.setGOLD_amount(0);
        goldProgressBar.setValue(JOHNNY.getGoldAmount());
        dispose();
    }//GEN-LAST:event_totalHPUpgradeActionPerformed

       public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(upgradeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(upgradeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(upgradeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(upgradeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                upgradeDialog dialog = new upgradeDialog();
                dialog.setLocationRelativeTo(null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton armorUpgrade;
    private javax.swing.JButton attackDamageUpgrade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton totalHPUpgrade;
    private javax.swing.JButton visionUpgrade;
    // End of variables declaration//GEN-END:variables
}
